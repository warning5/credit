<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.credit.rbac.dao.RoleMapper">
	<resultMap type="Role" id="roleResultMap">
		<id property="id" column="roleid" />
		<result property="name" column="name" />
		<result property="disable" column="disable" />
		<result property="description" column="description" />
	</resultMap>
	<resultMap type="java.lang.Integer" id="allRoleCount">
		<result column="allCount" javaType="java.lang.Integer"/>
	</resultMap>
	
	<select id="getByUser" parameterType="String" resultMap="roleResultMap">
		SELECT
		r.* FROM rbac_sys_role r LEFT JOIN rbac_sys_user_role ur ON
		r.roleid=ur.roleid WHERE ur.userid = #{userid}
	</select>
	<select id="getByGroup" parameterType="String" resultMap="roleResultMap">
		SELECT
		r.* FROM rbac_sys_role r LEFT JOIN rbac_sys_role_group rg ON
		r.roleid=rg.roleid WHERE rg.groupid = #{groupid}
	</select>
	<!-- 根据id查询角色信息 -->
	<select id="getByID" parameterType="String" resultMap="roleResultMap">
		select *
		from rbac_sys_role where roleid = #{roleid}
	</select>
	<!-- 获取所有的角色-->
	<select id="listLimit" resultMap="roleResultMap">
		select * from rbac_sys_role
	</select>
	<!-- 获取所有的角色-->
	<select id="list" resultMap="roleResultMap">
		select * from rbac_sys_role
	</select>
	<!-- 查询角色-->
	<select id="searchLimit" resultMap="roleResultMap">
		select * from rbac_sys_role
		where 1=1
		<if test="name !=null ">
			and name LIKE CONCAT(CONCAT('%', #{name}),'%')
		</if>
		and disable=#{disable}
	</select>
	<!-- 获取总数 -->
	<select id="allCount" resultMap="allRoleCount">
		select count(1) allCount from rbac_sys_role
		where 1=1
		<if test="name !=null ">
			and name LIKE CONCAT(CONCAT('%', #{name}),'%')
		</if>
			and disable=#{disable}
	</select>
	
	<!-- 添加角色 -->
	<insert id="add" parameterType="Role">
		insert into rbac_sys_role
		(roleid,name,disable,description)
		values(
		#{id},#{name},#{disable},#{description}
		)
	</insert>
	<!-- 批量分配功能/组 -->
	<insert id="allocateFunction" parameterType="Relation">
		insert into rbac_sys_role_function (rfid,roleid,functionid,comp) values
		(#{id},#{relationPK},#{relationFK},1)
	</insert>
	<insert id="allocateGroup" parameterType="Relation" >
		insert into rbac_sys_role_group (rgid,roleid,groupid) values
		(#{id},#{relationPK},#{relationFK})
	</insert>
	
	<!-- 修改角色 -->
	<update id="update" parameterType="Role" >
		update rbac_sys_role set
		name=#{name},disable=#{disable},description=#{description}
		where roleid=#{id}
	</update>
	<parameterMap type="map" id="batchRole">
		<parameter property="disable" javaType="java.lang.Boolean"/>
		<parameter property="ids" javaType="java.util.List"/>
	</parameterMap>
	<!-- 禁用/解禁角色 -->
	<update id="batchUpdate" parameterMap="batchRole">
		update rbac_sys_role set
		disable=#{disable}
		where roleid in
		<foreach collection="ids" open="(" close=")" item="ids" separator=",">
			#{ids}
		</foreach>
	</update>
	
	<!-- 删除角色-组的关联 -->
	<delete id="deleteRoleGroup" parameterType="java.util.List">
		delete from rbac_sys_role_group where roleid in
		<foreach collection="list" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
	<!-- 取消角色-组的关联 -->
	<parameterMap type="map" id="cancelAllocate">
		<parameter property="relationPK" javaType="java.lang.String" />
		<parameter property="relationFKs" javaType="java.util.List" />
	</parameterMap>
	<delete id="disallocateGroup" parameterMap="cancelAllocate">
		delete from rbac_sys_role_group where roleid=#{relationPK} and groupid in
		<foreach collection="relationFKs" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
	<!-- 删除角色-用户的关联 -->
	<delete id="deleteRoleUser" parameterType="java.util.List">
		delete from rbac_sys_user_role where roleid in
		<foreach collection="list" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
	<!-- 删除角色-功能的关联 -->
	<delete id="deleteRoleFunction" parameterType="java.util.List">
		delete from rbac_sys_role_function where roleid in
		<foreach collection="list" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
	<!-- 取消角色-功能的关联 -->
	<delete id="disallocateFunction" parameterMap="cancelAllocate">
		delete from rbac_sys_role_function where roleid=#{relationPK} and functionid in
		<foreach collection="relationFKs" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
	<!-- 删除角色 -->
	<delete id="delete" parameterType="java.util.List">
		delete from rbac_sys_role where roleid in
		<foreach collection="list" item="ids" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>
</mapper>